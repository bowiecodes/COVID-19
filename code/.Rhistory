# plot 'difference' for where 'month' is '4' (the first available month) between all 'sex'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal()
# plot 'difference' for where 'month' is '10' (the last available month) between all 'sex'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal()
# min() of the 'difference' column
min(df$difference)
# max() of the 'difference' column
max(df$difference)
df
# data frame where 'sex' is 'female'
females_df <- df %>% filter(sex == "Female")
females_df
# data frame where 'sex' is 'female'
females_df <- df %>% filter(sex == "Female")
# data frame where 'sex' is 'male'
males_df <- df %>% filter(sex == "Male")
# plot where each lines represents a 'month' for 'Female'
options(scipen = 5)
ggplot(data = females_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5)) + # legend.position = "none"
scale_colour_discrete("Month")
# plot where each lines represents a 'month' for 'Male'
options(scipen = 5)
ggplot(data = males_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5)) + # legend.position = "none"
scale_colour_discrete("Month")
# add a 'difference' column to `females_df` dataframe
females_df$difference <- c(0, diff(females_df$total_positive))
females_df
# add a 'difference' column to `males_df` dataframe
males_df$difference <- c(0, diff(males_df$total_positive))
males_df
# plot `difference` in cases between days for each month for `Female`
ggplot(data = females_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
theme_minimal()
# plot `difference` in cases between days for each month for `Female`
ggplot(data = males_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
theme_minimal()
# combine `females_df` and `males_df` and reassign to `df` dataframe
df <- rbind(females_df, males_df)
df
# combine `females_df` and `males_df` and reassign to `df` dataframe
df <- rbind(females_df, males_df)
df
# load packages
library(ggplot2)
#library(stringr)
#library(readr)
library(here)
library(dplyr)
# plot where each lines represents a 'month' for 'Female'
options(scipen = 5)
ggplot(data = females_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = 'for females', x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5)) + # legend.position = "none"
scale_colour_discrete("Month")
# plot where each lines represents a 'month' for 'Female'
options(scipen = 5)
ggplot(data = females_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = "for where sex is 'Female'", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# plot where each lines represents a 'month' for 'Female'
options(scipen = 5)
ggplot(data = females_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = "for Females", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# plot where each lines represents a 'month' for 'Male'
options(scipen = 5)
ggplot(data = males_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = "for Males", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# min() of the 'difference' column
min(df$difference != 0)
# max() of the 'difference' column
max(df$difference)
df$difference
df$difference > 0
df %>% filter(difference > 0)
df %>% filter(difference > 0) %>% pull(difference)
min(df %>% filter(difference > 0) %>% pull(difference))
# min(), besides 0, of the 'difference' column
min(df %>% filter(difference > 0) %>% pull(difference))
# max() of the 'difference' column
max(df$difference)
# plot 'difference' for where 'month' is '4' (the first available month) between all 'sex'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal()
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of April") +
theme_minimal()
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of April") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October")
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October")
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October")
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# combine `females_df` and `males_df` and reassign to `df` dataframe
df <- rbind(females_df, males_df)
# import data
df <- read.csv(here("raw_data", "case_demographics_sex.csv"), na.strings = c("", ".", "NA", " ", "None"))
head(df)
# add a 'month' column
df$month <-as.numeric(substr(df$date, 6, 7))
# add a 'day' column
df$day <-as.numeric(substr(df$date, 9, 10))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of April", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# load packages
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(here)
# import data
df <- read.csv(here("raw_data", "case_demographics_sex.csv"), na.strings = c("", ".", "NA", " ", "None"))
head(df)
# structure of data set
str(df)
# view the different factors of `sex`
df$sex %>% unique()
# view the count of each unique `sex`
df %>% group_by(sex) %>% count()
# add a 'month' column
df$month <-as.numeric(substr(df$date, 6, 7))
# add a 'day' column
df$day <-as.numeric(substr(df$date, 9, 10))
# remove the following characteristics:
# 'Transgender' and 'Unknown' from the 'sex' column;
# 'November' from the 'month' column
df <- df %>% filter(sex != "Transgender", sex != "Unknown", month != 11)
# remove unneeded column
df$date <- NULL
df$case_percent <- NULL
df$deaths <- NULL
df$deaths_percent <- NULL
df$ca_percent <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
# arrange by 'day', then arrange by 'month' (note: important for when diff() is used later on)
df <- df %>% arrange(day) %>% arrange(month)
head(df)
# show data frame where 'month' is 'April'
april <- df %>% filter(month == 4)
april
#' @title Duplicate Row Remover
#' @description removes duplicated rows from a data frame
#' @param dataframe is a table or two-dimensional array-like structure/object
#' @return a data frame that no longer has duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
#' @title Duplicate Row Checker
#' @description double checks that are no duplicate rows in the data frame
#' @param dataframe is a table or two-dimensional array-like structure/object
#' @return a character/string message indicating if there are any duplicates in the data frame
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
# this data frame has duplicate rows
female_4 <- april %>% filter(sex == "Female")
# this data frame does not have duplicate rows
female_4_cleaned <- remove_dup(female_4)
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply 'remove_dup()' to the data frame
df <- remove_dup(df)
head(df)
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of April", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# plot `difference` in cases between days for each month for `Female`
ggplot(data = females_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis ", subtitle = "for Females", x = "Day of the Month", y = "Difference") +
theme_minimal()
# plot `difference` in cases between days for each month for `Male`
ggplot(data = males_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis ", subtitle = "for Males", x = "Day of the Month", y = "Difference")
theme_minimal()
# plot `difference` in cases between days for each month for `Male`
ggplot(data = males_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis ", subtitle = "for Males", x = "Day of the Month", y = "Difference") +
theme_minimal()
# plot `difference` in cases between days for each month for `Female`
ggplot(data = females_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis ", subtitle = "for Females", x = "Day of the Month", y = "Difference") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# plot `difference` in cases between days for each month for `Male`
ggplot(data = males_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis ", subtitle = "for Males", x = "Day of the Month", y = "Difference") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "in the month of April", x = "Day of the Month", y = "Difference") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal()
# load packages
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(here)
# import data
df <- read.csv(here("raw_data", "case_demographics_sex.csv"), na.strings = c("", ".", "NA", " ", "None"))
head(df)
# structure of data set
str(df)
# view the different factors of `sex`
df$sex %>% unique()
# view the count of each unique `sex`
df %>% group_by(sex) %>% count()
# add a 'month' column
df$month <-as.numeric(substr(df$date, 6, 7))
# add a 'day' column
df$day <-as.numeric(substr(df$date, 9, 10))
# remove the following characteristics:
# 'Transgender' and 'Unknown' from the 'sex' column;
# 'November' from the 'month' column
df <- df %>% filter(sex != "Transgender", sex != "Unknown", month != 11)
# remove unneeded column
df$date <- NULL
df$case_percent <- NULL
df$deaths <- NULL
df$deaths_percent <- NULL
df$ca_percent <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
# arrange by 'day', then arrange by 'month' (note: important for when diff() is used later on)
df <- df %>% arrange(day) %>% arrange(month)
head(df)
# explore a particular month of the data frame e.g. where 'month' is '4'
april <- df %>% filter(month == 4)
april
#' @title Duplicate Row Remover
#' @description removes duplicated rows from a data frame
#' @param dataframe is a table or two-dimensional array-like structure/object
#' @return a data frame that no longer has duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
#' @title Duplicate Row Checker
#' @description double checks that are no duplicate rows in the data frame
#' @param dataframe is a table or two-dimensional array-like structure/object
#' @return a character/string message indicating if there are any duplicates in the data frame
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
# this data frame has duplicate rows
female_4 <- april %>% filter(sex == "Female")
# this data frame does not have duplicate rows
female_4_cleaned <- remove_dup(female_4)
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply 'remove_dup()' to the data frame
df <- remove_dup(df)
head(df)
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of April", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
labs(title = "Trend of cases for the month of October", x = "Day of the Month", y = "Number of Positive Cases") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5))
# data frame where 'sex' is 'Female'
females_df <- df %>% filter(sex == "Female")
# data frame where 'sex' is 'Male'
males_df <- df %>% filter(sex == "Male")
# displays the trend of cases for each month for 'Female'
options(scipen = 5)
ggplot(data = females_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = "for Females", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# displays the trend of cases for each month for 'Male'
options(scipen = 5)
ggplot(data = males_df,
aes(x = day, y = total_positive, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Trend of cases for each month", subtitle = "for Males", x = "Day of the Month", y = "Number of Positive Cases") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# add a 'difference' column to `females_df` dataframe
females_df$difference <- c(0, diff(females_df$total_positive))
females_df
# add a 'difference' column to `males_df` dataframe
males_df$difference <- c(0, diff(males_df$total_positive))
males_df
# plot `difference` in cases between days for each month for `Female`
ggplot(data = females_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "for Females", x = "Day of the Month", y = "Difference") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# plot `difference` in cases between days for each month for `Male`
ggplot(data = males_df,
aes(x = day, y = difference, color = as.factor(month), group = month)) +
geom_line() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "for Males", x = "Day of the Month", y = "Difference") +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5)) +
scale_colour_discrete("Month")
# combine `females_df` and `males_df` and reassign to `df` dataframe
df <- rbind(females_df, males_df)
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "in the month of April", x = "Day of the Month", y = "Difference") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal()
# first available 'month' is '4'
ggplot(data = df %>% filter(month == 4),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "in the month of April", x = "Day of the Month", y = "Difference") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "in the month of April", x = "Day of the Month", y = "Difference") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 10, face = "bold", hjust = 0.5))
# last available 'month' is '10'
ggplot(data = df %>% filter(month == 10),
aes(x = day, y = difference, color = sex, group = sex)) +
geom_line() +
geom_point() +
labs(title = "Fluctuations in Positive Cases On a Daily Basis", subtitle = "in the month of April", x = "Day of the Month", y = "Difference") +
scale_x_continuous(breaks = seq(min(df$day), max(df$day), 2)) +
theme_minimal() +
theme(plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, face = "bold", hjust = 0.5))
