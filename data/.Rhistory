# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
three_sixes_ten_trials <- choose(n = n_die, k = k_die) * (p_die)^k_die * (1 - (p_die))^(n_die - k_die)
choose(n = n_die, k = k_die)
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_rol <- choose(n = n_die, k = k_die) * p_die^k_die * (1 - (p_die))^(n_die - k_die)
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * p_die^k_die * (1 - (p_die))^(n_die - k_die)
die_roll
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * (p_die^k_die) * (1 - (p_die))^(n_die - k_die)
die_roll
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * p_die^k_die * (1 - p_die)^(n_die - k_die)
die_roll
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * (p_die^k_die * (1 - p_die)^(n_die - k_die))
die_roll
# 5.1 continue
# Consider rolling a fair die 10 times. What is the probability
# of getting exactly 3 sixes?
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * (p_die^k_die * (1 - p_die)^(n_die - k_die))
die_roll
# 5.2 continue
# Read the documentation and figure out how to use the `dbinom()` function
# to obtain the above probabilities: 2 heads in 5 coin tosses, and
# 3 sixes in 3 rolls of a die.
two_heads_five_trials_dbinom <-  dbinom(x= 2, size = 5, prob = 1/2)
three_sixes_ten_trials_dbinom <- dbinom(x= 3, size = 3, prob = 1/6)
two_heads_five_trials_dbinom
three_sixes_ten_trials_dbinom
# 5.2 continue
# Read the documentation and figure out how to use the `dbinom()` function
# to obtain the above probabilities: 2 heads in 5 coin tosses, and
# 3 sixes in 3 rolls of a die.
two_heads_five_trials_dbinom <-  dbinom(x= 2, size = 5, prob = 1/2)
three_sixes_three_trials_dbinom <- dbinom(x= 3, size = 3, prob = 1/6)
two_heads_five_trials_dbinom
three_sixes_ten_trials_dbinom
# 5.2 continue
# How would you modify the previous binomial function to calculate the
# same probability (2 heads in 5 tosses) of a __biased__ coin with a chance of
# heads of 35%?
two_heads_five_trials_dbinom_modified <-  dbinom(x= 2, size = 5, prob = 0.35)
two_heads_five_trials_dbinom_modified
# Finally, obtain the probability of getting more than 3 heads in 5 tosses
# with a biased coin of 35% chance of heads.
four_heads <-  dbinom(x= 4, size = 5, prob = 0.35)
five_heads <- dbinom(x= 5, size = 5, prob = 0.35)
four_heads
five_heads
# total expenses
total <- transportation + groceries + gym + rent + other
total
# semester expenses
semester_total <- total * 5
semester_total
# year expenses
year_total <- semester_total * 2
year_total
knitr::opts_chunk$set(echo = TRUE)
phone <- 80
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
# total expenses
total <- transportation + groceries + gym + rent + other
total
# semester expenses
semester_total <- total * 5
semester_total
# year expenses
year_total <- semester_total * 2
year_total
# vector expenses
expenses <- c(phone, transportation, groceries, gym, rent, other)
expenses
# barchart with colored bars
barplot(expenses, col = blues9)
# barchart horizontally oriented
barplot(expenses, col = blues9, horiz = TRUE)
# barchart with bar labels
names(expenses) = c('phone', 'transportation', 'groceries', 'gym', 'rent', 'other')
par(mar = c(5.1, 8, 4.1, 2.1))
barplot(expenses, col = blues9, horiz = TRUE, las = 1)
# barchart in decreasing/increasing order
sorted_expenses = sort(expenses)
par(mar = c(5.1, 8, 4.1, 2.1))
barplot(sorted_expenses, col = blues9, horiz = TRUE, las = 1)
a <-  3
b <-  4
hypotenuse <- sqrt((a^2) + (b^2))
hypotenuse
n <- 5
k <- 2
p <- 1/2
combos <- factorial(n) / (factorial(k) * factorial(n - k))
combos
binomial_prob <- combos * p^k * (1 - p)^(n - k)
binomial_prob
two_heads_five_trials <- choose(n = n, k = k) * p^k * (1 - p)^(n-k)
two_heads_five_trials
n_die <-  10
k_die <-  3
p_die <-  1/6
die_roll <- choose(n = n_die, k = k_die) * (p_die^k_die * (1 - p_die)^(n_die - k_die))
die_roll
two_heads_five_trials_dbinom <-  dbinom(x= 2, size = 5, prob = 1/2)
three_sixes_ten_trials_dbinom <- dbinom(x= 3, size = 3, prob = 1/6)
two_heads_five_trials_dbinom
three_sixes_ten_trials_dbinom
two_heads_five_trials_dbinom_modified <-  dbinom(x= 2, size = 5, prob = 0.35)
two_heads_five_trials_dbinom_modified
# Finally, obtain the probability of getting more than 3 heads in 5 tosses
# with a biased coin of 35% chance of heads.
four_heads <-  dbinom(x= 4, size = 5, prob = 0.35)
five_heads <- dbinom(x= 5, size = 5, prob = 0.35)
four_heads
five_heads
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
# include this chunk in your Rmd
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
# include this chunk in your Rmd
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
starwars
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
# creating 5 vectors (from columns in dat)
name <- dat$name
height <- dat$height
mass <- dat$mass
sex <- dat$sex
homeworld <- dat$homeworld
typeof(name)
typeof(height)
typeof(mass)
typeof(sex)
typeof(homeworld)
four <- head(name, n = 4)
four <- head(name, n = 4)
four
dat
# your code
four[1]
# your code
four[0]
# your code
four[-1]
# your code
four[-c(1,2,3)]
# your code
four[5]
# your code
four[c(1,2,2,3,3,3)]
x <- c(2, 4, 6, 8)
x
names(x) <- letters[1:4]
x
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data(starwars)
dat <- na.omit(starwars[, names(starwars) %in%
c("name", "height", "mass", "sex", "homeworld")])
# creating 5 vectors (from columns in dat)
name <- dat$name
height <- dat$height
mass <- dat$mass
sex <- dat$sex
homeworld <- dat$homeworld
typeof(name)
typeof(height)
typeof(mass)
typeof(sex)
typeof(homeworld)
four <- head(name, n = 4)
four
# your code
four[1]
# your code
four[0]
# your code
four[-1]
# your code
four[-c(1,2,3)]
# your code
four[5]
# your code
four[c(1,2,2,3,3,3)]
name[seq(from = 2, to = length(name), by = 2)]
height[seq(from = 1, to = length(height), by = 2)]
sex[seq(from = 5, to = length(sex), by = 5)]
mass[seq(from = 10, to = length(mass), by = 10)]
rev(name[seq(from = 2, to = length(name), by = 2)])
height_four <- height[1:4]
# elements greater than 100
height_four[height_four > 100]
# elements less than 100
height_four[height_four < 100]
# elements less than or equal to 10
height_four[height_four <= 10]
# elements different from 10
height_four[height_four != 10]
# AND
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
# OR
TRUE | TRUE
TRUE | FALSE
FALSE | FALSE
# NOT
!TRUE
!FALSE
# vectors for first 10 elements
name10 <- name[1:10]
height10 <- height[1:10]
mass10 <- mass[1:10]
sex10 <- sex[1:10]
# names of first 10 individuals with mass greater than 70kg
name10[mass10 > 70]
# names of first 10 individuals with heights between 150 and 200 (exclusive)
name10[height10 > 150 & height10 < 200]
# your code
name[homeworld == 'Naboo']
# your code
name[homeworld == 'Naboo' | homeworld == 'Corellia']
# your code
name[sex == 'female']
# your code
name[mass == max(mass)]
# your code
max(height[sex == 'female'])
# your code
name[height == median(height)]
# your code
name[height <= 180 & mass >= 120]
sex_fac <- factor(sex)
table(sex_fac)
sex_fac[1:5]
# your code
sex_fac[homeworld == 'Naboo']
# your code
sex_fac[mass > 80]
# your code
table(sex_fac[height > 180])
# your code
table(homeworld[sex_fac == 'male'])
# matrix with height and mass of first 5 individuals
HM <- matrix(c(height[1:5], mass[1:5]), nrow = 5, ncol = 2)
HM
rownames(HM) <- name[1:5]
colnames(HM) <- c("height", "mass")
HM
# your code
MH <- head(cbind(mass, height), 10)
MH
# your code
females <- matrix(c(mass[sex == 'female'], height[sex == 'female']), nrow = 9, ncol = 2)
females
# your code
rownames(females) <- name[sex == 'female']
colnames(females) <- c("mass", "height")
females
# your code
MHW <- matrix(c(mass, height, homeworld), ncol = 3)
typeof(MHW)
nrow(females)
females[ , 2]
females$mass
data()
sleep
data(sleep)
data(sleep)
data(sleep)
head(sleep)
sleep
library(readxl)
uc1 <- read_excel("Desktop/R-Projects/uc1.xls")
View(uc1)
tbl <- read_excel("Desktop/R-Projects/ad1.xls")
tbl
view(tbl)
View(tbl)
library(readxl)
tbl <- read_excel("Desktop/R-Projects/pov30_100_1.xlsx")
View(tbl)
shiny::runApp('Desktop/STAT133/Projects/Project 2')
knitr::opts_chunk$set(echo = TRUE)
csv <- read.csv(case_demographics_sex.csv)
csv <- read.csv("case_demographics_sex.csv")
setwd("~/Desktop/GitHub/COVID-19/data")
csv <- read.csv("case_demographics_sex.csv")
csv
csv <- read.csv("case_demographics_sex.csv")
View(csv)
csv
csv <- read.csv(
file ="case_demographics_sex.csv",
na.strings = c("", " "))
View(csv)
csv
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat$MONTH <-as.numeric(substr(dat$ISO_TIME, 6, 7))
str(dat, vec.len = 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
# Head of dat
head(dat, 10)
# Tail of dat
tail(dat, 10)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
dat$MONTH <-as.numeric(substr(dat$ISO_TIME, 6, 7))
str(dat, vec.len = 1)
# Head of dat
head(dat, 10)
# Tail of dat
tail(dat, 10)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272#,
#na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
csv <- read.csv(
file ="case_demographics_sex.csv",
na.strings = c("", " "))
#View(csv)
csv
csv <- read.csv(
file ="case_demographics_sex.csv",
na.strings = c("", " ", "None"))
#View(csv)
csv
csv$deaths %>% unique()
csv <- read.csv(
file ="case_demographics_sex.csv",
na.strings = c("", " ", "None", "NA"))
#View(csv)
csv
str(csv)
csv$sex
csv$sex %>% unique()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(
file ="case_demographics_sex.csv")
na.strings = c("", " ", "None", "NA"))
# add a 'month' column
df$month <-as.numeric(substr(df$date, 6, 7))
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
str(df)
head(df)
tail(df)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(
file ="case_demographics_sex.csv")
na.strings = c("", " ", "None", "NA"))
tail(df)
head(df)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(
file ="case_demographics_sex.csv")
na.strings = c("", " ", "None", "NA"))
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(
file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(csv)
df
# structure of dataset
str(df)
# factors of sex
df$sex %>% unique()
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
head(df)
tail(df)
