# remove data column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
april <- df %>% filter(month == 4)
april
# function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
april_cleaned <- remove_dup(april)
april_cleaned
april[!duplicated(april), ] %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
april[!duplicated(april), ] %>% group_by(day) %>% count() %>% pull(n) %>% unique()
april[!duplicated(april), ] %>% group_by(day) %>% count()
april <- df %>% filter(month == 4)
april
# function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
april_cleaned <- remove_dup(april)
april_cleaned
# double check that there are no duplicates
check_for_dups <- function(dataframe) {
len = dataframe[!duplicated(dataframe), ] %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("FALSE")
} else {
print("TRUE")
}
}
check_for_dups(april)
check_for_dups(april_cleaned)
april[duplicated(april), ] %>% group_by(day) %>% count()
# double check that there are no duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("FALSE")
} else {
print("TRUE")
}
}
check_for_dups(april)
check_for_dups(april_cleaned)
april %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
april %>% group_by(day) %>% count() %>% pull(n) %>% unique()
april %>% group_by(day) %>% count()
# double check that there are no duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("There are duplicates in this dataset!")
} else {
print("No duplicates in this dataset!")
}
}
check_for_dups(april)
check_for_dups(april_cleaned)
# double check that there are no duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(april)
check_for_dups(april_cleaned)
# double check that there are no duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
return("Oh, no! There are duplicates in this dataset! :( ")
} else {
return("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(april)
check_for_dups(april_cleaned)
df
remove_dup(df)
duplicated(df)
df[duplicated(df)]
df[duplicated(df), ]
remove_dup(df)
df <- remove_dup(df)
df
df %>% filter(month == 4)
df %>% filter(month == 4) %>% group_by(sex == "Female")
df %>% filter(month == 4, sex == "Female")
female_april <- df %>% filter(month == 4, sex == "Female")
female_april
ggplot(data = female_april, aes(x = day, y = total_positive)) +
geom_line()
female_april <- df %>% filter(month == 4, sex == "Female")
male_april <- df %>% filter(month == 4, sex == "Male")
unknown_april <- df %>% filter(month == 4, sex == "Unknown")
ggplot(data = female_april, aes(x = day, y = total_positive)) +
geom_line()
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df, aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 5), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 4 | month == 5), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df, aes(x = day, y = total_positive, color = month, group = month)) +
geom_line()
ggplot(data = df %>% filter(month == 4 | month == 5), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 5), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == max(df$month)), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 10, aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
df %>% filter(sex != "Unknown")
df <- df %>% filter(sex != "Unknown")
df
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# last available month (October) of dataset
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" | sex != "Unknown")
df
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
df <- read.csv(
file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" | sex != "Unknown")
df
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
april %>% filter(sex == "Female")
# notice that there are duplicates in the dataset
female_4 <- april %>% filter(sex == "Female")
female_4
female_4_cleaned <- remove_dup(female_4)
female_4_cleaned
# function to double check for duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
april_cleaned <- remove_dup(april)
april_cleaned
# apply the remove_dup() function the entire dataset
df <- remove_dup(df)
df
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
df <- read.csv(
file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
# show dataframe of month April only
april <- df %>% filter(month == 4)
april
# notice that there are duplicates in the dataset
female_4 <- april %>% filter(sex == "Female")
female_4
# create a function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
female_4_cleaned <- remove_dup(female_4)
female_4_cleaned
# function to double check for duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply the remove_dup() function the entire dataset
df <- remove_dup(df)
df
# first available month (April) of dataset
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# last available month (October) of dataset
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
df <- read.csv(
file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
# show dataframe of month April only
april <- df %>% filter(month == 4)
april
# notice that there are duplicates in the dataset
female_4 <- april %>% filter(sex == "Female")
female_4
# create a function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
female_4_cleaned <- remove_dup(female_4)
female_4_cleaned
# function to double check for duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply the remove_dup() function the entire dataset
df <- remove_dup(df)
df
# plot first available month (April) of dataset
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# plot last available month (October) of dataset
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
View(df)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
df <- read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
df <- read.csv("case_demographics_sex.csv", na.strings=c("",".","NA"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(maps)
col_names <- c("SID", "SEASON", "NUMBER", "BASIN", "SUBBASIN", "NAME", "ISO_TIME", "NATURE", "LAT", "LON", "WMO_WIND", "WMO_PRES", "WMO_AGENCY", "TRACK_TYPE", "DIST2LAND", "LANDFALL")
col_types <- c("character", "integer", "integer", "character", "character", "character", "character", "character", "real", "real", "integer", "integer", "character", "character", "integer", "integer")
dat <- read.csv(
file = "ibtracs.NA.list.v04r00.csv",
colClasses = c(col_types, rep("NULL", 147)),
stringsAsFactors = FALSE,
skip = 86272,
na.strings = c("", " ", "-9999.0")
)
colnames(dat) <- col_names
dat
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
df <- read.csv("case_demographics_sex.csv", na.strings=c("",".","NA"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
#na.strings = c("", " ", "None", "NA"))
#View(df)
df
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
# show dataframe of month April only
april <- df %>% filter(month == 4)
april
# notice that there are duplicates in the dataset
female_4 <- april %>% filter(sex == "Female")
female_4
# create a function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
female_4_cleaned <- remove_dup(female_4)
female_4_cleaned
# function to double check for duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply the remove_dup() function the entire dataset
df <- remove_dup(df)
df
# plot first available month (April) of dataset
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# plot last available month (October) of dataset
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
df <- read.csv("case_demographics_sex.csv", na.strings=c("", ".", "NA", " ", "None"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
df
df <- read.csv(file = "case_demographics_sex.csv", na.strings = c("", ".", "NA", " ", "None"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
df
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
df <- read.csv(file = "case_demographics_sex.csv", na.strings = c("", ".", "NA", " ", "None"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
df
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
df %>% filter(case_percent == NA)
df %>% filter(case_percent == 'NA')
# investigate why NA is not populating in df
df %>% filter(case_percent == 'NA')
# investigate why NA is not populating in df
df %>% filter(deaths == 'NA')
# investigate why NA is not populating in df
df %>% filter(deaths == 'NA')
df %>% filter(deaths == NA)
#View(df)
str(df)
df$sex
df$sex %>% unique()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(readr)
df <- read.csv(file = "case_demographics_sex.csv", na.strings = c("", ".", "NA", " ", "None"))
#read_csv("case_demographics_sex.csv", na = c("", " "))
#read.csv(file ="case_demographics_sex.csv")
df
# investigate why NA is not populating in df
df %>% filter(deaths == 'NA')
df %>% filter(deaths == NA)
# structure of dataset
str(df)
# view the different factors of sex
df$sex %>% unique()
# view count of each unique 'sex'
df %>% group_by(sex) %>% count()
# remove observations of 'Transgender' because there's only one in the dataset and also remove 'Unknown'
df <- df %>% filter(sex != "Transgender" & sex != "Unknown")
df
# add 'month' and 'day' columns
df$month <-as.numeric(substr(df$date, 6, 7))
df$day <-as.numeric(substr(df$date, 9, 10))
df
# remove 'date' column
df$date <- NULL
# rename 'totalpositive2' column
colnames(df)[names(df) == "totalpositive2"] <- "total_positive"
df
# show dataframe of month April only
april <- df %>% filter(month == 4)
april
# notice that there are duplicates in the dataset
female_4 <- april %>% filter(sex == "Female")
female_4
# create a function to remove duplicate rows
remove_dup <- function(dataframe) {
return(dataframe[!duplicated(dataframe), ])
}
female_4_cleaned <- remove_dup(female_4)
female_4_cleaned
# function to double check for duplicates
check_for_dups <- function(dataframe) {
len = dataframe %>% group_by(day) %>% count() %>% pull(n) %>% unique() %>% length()
if (len != 1) {
print("Oh, no! There are duplicates in this dataset! :( ")
} else {
print("Yay! There are no duplicates in this dataset! :) ")
}
}
check_for_dups(female_4)
check_for_dups(female_4_cleaned)
# apply the remove_dup() function the entire dataset
df <- remove_dup(df)
df
# plot first available month (April) of dataset
ggplot(data = df %>% filter(month == 4), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
# plot last available month (October) of dataset
ggplot(data = df %>% filter(month == 10), aes(x = day, y = total_positive, color = sex, group = sex)) +
geom_line()
#View(df)
str(df)
write.csv(df, "cleaned_case_demographics_sex")
write.csv(df, "cleaned_case_demographics_sex.csv")
